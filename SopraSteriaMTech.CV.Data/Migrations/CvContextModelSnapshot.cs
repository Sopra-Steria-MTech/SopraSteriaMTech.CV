// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
using SopraSteriaMTech.Cv.Data;

#nullable disable

namespace SopraSteriaMTech.Cv.Data.Migrations
=======
using OrdinaMTech.Cv.Data;

#nullable disable

namespace OrdinaMTech.Cv.Data.Migrations
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
{
    [DbContext(typeof(CvContext))]
    partial class CvContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Cursus", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Cursus", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Certificaat")
                        .HasColumnType("bit");

                    b.Property<int>("CvId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instituut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CvId");

                    b.ToTable("Cursus", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Cv", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Cv", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonaliaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaliaId");

                    b.ToTable("Cv", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Ervaring", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Ervaring", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CvId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumTm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumVan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Functie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organisatie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CvId");

                    b.ToTable("Werkervaring", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Kennis", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Kennis", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CvId")
                        .HasColumnType("int");

                    b.Property<int>("Jaren")
                        .HasColumnType("int");

                    b.Property<string>("Kennisgebied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kennisniveau")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CvId");

                    b.ToTable("Kennis", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Opleiding", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Opleiding", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CvId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumTm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumVan")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Diploma")
                        .HasColumnType("bit");

                    b.Property<string>("Niveau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CvId");

                    b.ToTable("Opleiding", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Personalia", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Personalia", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Woonplaats")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personalia", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Taal", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Taal", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CvId")
                        .HasColumnType("int");

                    b.Property<int>("Mondeling")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Schriftelijk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CvId");

                    b.ToTable("Taal", (string)null);
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Cursus", b =>
                {
                    b.HasOne("SopraSteriaMTech.Cv.Data.Models.Cv", null)
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Cursus", b =>
                {
                    b.HasOne("OrdinaMTech.Cv.Data.Models.Cv", null)
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                        .WithMany("Cursussen")
                        .HasForeignKey("CvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Cv", b =>
                {
                    b.HasOne("SopraSteriaMTech.Cv.Data.Models.Personalia", "Personalia")
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Cv", b =>
                {
                    b.HasOne("OrdinaMTech.Cv.Data.Models.Personalia", "Personalia")
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                        .WithMany()
                        .HasForeignKey("PersonaliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personalia");
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Ervaring", b =>
                {
                    b.HasOne("SopraSteriaMTech.Cv.Data.Models.Cv", null)
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Ervaring", b =>
                {
                    b.HasOne("OrdinaMTech.Cv.Data.Models.Cv", null)
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                        .WithMany("Werkervaring")
                        .HasForeignKey("CvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Kennis", b =>
                {
                    b.HasOne("SopraSteriaMTech.Cv.Data.Models.Cv", null)
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Kennis", b =>
                {
                    b.HasOne("OrdinaMTech.Cv.Data.Models.Cv", null)
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                        .WithMany("Kennis")
                        .HasForeignKey("CvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Opleiding", b =>
                {
                    b.HasOne("SopraSteriaMTech.Cv.Data.Models.Cv", null)
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Opleiding", b =>
                {
                    b.HasOne("OrdinaMTech.Cv.Data.Models.Cv", null)
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                        .WithMany("Opleidingen")
                        .HasForeignKey("CvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Taal", b =>
                {
                    b.HasOne("SopraSteriaMTech.Cv.Data.Models.Cv", null)
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Taal", b =>
                {
                    b.HasOne("OrdinaMTech.Cv.Data.Models.Cv", null)
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                        .WithMany("Talen")
                        .HasForeignKey("CvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

<<<<<<< HEAD:SopraSteriaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
            modelBuilder.Entity("SopraSteriaMTech.Cv.Data.Models.Cv", b =>
=======
            modelBuilder.Entity("OrdinaMTech.Cv.Data.Models.Cv", b =>
>>>>>>> master:OrdinaMTech.CV.Data/Migrations/CvContextModelSnapshot.cs
                {
                    b.Navigation("Cursussen");

                    b.Navigation("Kennis");

                    b.Navigation("Opleidingen");

                    b.Navigation("Talen");

                    b.Navigation("Werkervaring");
                });
#pragma warning restore 612, 618
        }
    }
}
